name: run_unit_tests
run-name: ${{ github.actor }} is running the unit tests
on:
  push:
    branches:
      - '*'
jobs:
  setup-variables:
    if: ${{ !startsWith(github.event.head_commit.message, 'WIP') }}
    runs-on: [self-hosted, aws-clinical-dev-runner]
    container:
      image: ubuntu:22.04
    outputs:
      filename_now: ${{steps.set_vars.outputs.filename_now}}
      iso_now: ${{steps.set_vars.outputs.iso_now}}
      artifact_name: ${{steps.artifact_name.outputs.artifact_name}}
    steps:
      - name: set variables
        id: set_vars
        shell: bash
        run: |
          echo "filename_now=$(date +'%Y%m%dT%H%M%S')" >> $GITHUB_OUTPUT
          echo "iso_now=$(date +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
      - name: set artifact_name
        id: artifact_name
        run: |
          echo "artifact_name=${{steps.set_vars.outputs.filename_now}}-${{github.event.repository.name}}-${{github.workflow}}-${{github.sha}}" >> $GITHUB_OUTPUT
  run_unit_tests:
    if: ${{ !startsWith(github.event.head_commit.message, 'WIP') }}
    runs-on: [self-hosted, aws-clinical-dev-runner]
    container:
      image: python:3.10.13-bullseye
    needs: setup-variables
    env:
      OUTPUT_FILE: "outputs/${{github.job}}_output.txt"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install requirements
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: create directory for output
        run: mkdir -p outputs
      - name: Dump github context
        run:   echo "$GITHUB_CONTEXT" > outputs/github_context.txt
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      - name: set up file header block
        run: |
          echo "*********************" >> $OUTPUT_FILE
          echo "workflow information" >> $OUTPUT_FILE
          echo "workflow: ${{github.workflow}}" >> $OUTPUT_FILE
          echo "job: ${{github.job}}" >> $OUTPUT_FILE
          echo "github_actor: ${{github.actor}}" >> $OUTPUT_FILE
          echo "timestamp: ${{needs.setup-variables.outputs.iso_now}}" >> $OUTPUT_FILE
          echo "*********************" >> $OUTPUT_FILE
      - name: run pytest
        run: |
          echo "${{ github.actor }} is running the unit tests" >> $OUTPUT_FILE
          pytest --cov-branch --cov-report html:outputs/cov_html --cov=src -v 2>&1 >> $OUTPUT_FILE && \
          (echo "Passed all unit tests OK" >> $OUTPUT_FILE && cat $OUTPUT_FILE) || \
          (echo "Failed unit tests" >> $OUTPUT_FILE && cat $OUTPUT_FILE && exit 1)
      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.setup-variables.outputs.artifact_name }}
          path: outputs
